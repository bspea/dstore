<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">
	
	<resultMap id="chatResultSet" type="com.kh.dstay.customer_center.model.vo.Chat">
		<id property="chatNo" column="chatno"/>
		<result property="chatSend" column="chatsend"/>
		<result property="chatRecv" column="chatrecv"/>
		<result property="email" column="email"/>
		<result property="nickName" column="nickname"/>
		<result property="chatContents" column="chatcontents"/>
		<result property="chatTime" column="chattime"/>
		<result property="chatRead" column="chatread"/>
	</resultMap>
	
	<resultMap id="lastChatResultSet" type="com.kh.dstay.customer_center.model.vo.Chat">
		<id property="chatNo" column="chatno"/>
		<result property="nickName" column="nickname"/>
		<result property="chatWriter" column="chatwriter"/>
		<result property="chatContents" column="chatcontents"/>
		<result property="chatTime" column="chattime"/>
		<result property="chatRead" column="chatread"/>
	</resultMap>
	
	<select id="chatRoomList" resultMap="chatResultSet">
        SELECT f.*, EMAIL, NICKNAME FROM (SELECT CHATNO, CHATSEND, CHATRECV, CHATCONTENTS, TO_CHAR(CHATTIME, 'AM HH:MI') AS CHATTIME, RANK() OVER (PARTITION BY CHATSEND ORDER BY CHATTIME DESC ) ranking FROM CHAT WHERE CHATSEND!=2) f
        JOIN MEMBER ON(MNO=CHATSEND)
        WHERE ranking=1
	</select>
	
	
	<select id="selectChatList" resultMap="chatResultSet">
		SELECT CHATNO, CHATSEND, CHATRECV, EMAIL, NICKNAME, CHATCONTENTS, TO_CHAR(CHATTIME, 'AM HH:MI') AS CHATTIME, CHATREAD
		FROM CHAT
		JOIN MEMBER ON(MNO=CHATSEND)
		ORDER BY CHATNO
	</select>
	
	<select id="selectChatNotRead" resultMap="chatResultSet">
	SELECT CHATNO, CHATSEND, CHATRECV, NICKNAME, CHATCONTENTS, TO_CHAR(CHATTIME, 'AM HH:MI') AS CHATTIME, CHATREAD
		FROM CHAT
		JOIN MEMBER ON(MNO=CHATSEND)
		WHERE CHATREAD='N' AND CHATSEND=2
		ORDER BY CHATNO
	</select>
	
	
	<insert id="insertChat">
		insert into chat
		values(seq_chat_no.nextval, #{chatSend}, #{chatRecv}, #{chatContents}, sysdate, default)
	</insert>
	
	<update id="ensureChat">
		update chat
		set chatread='Y'
		where chatNo <![CDATA[
<=
]]> #{chatNo} and chatWriter != #{chatWriter}
	</update>
	
	<select id="selectLastChat" resultMap="lastChatResultSet">
		select chatno, chatwriter, mno, nickname, chatcontents, to_char(chattime, 'YYYYMMDDHH24MISSFF2') as chattime, chatread
		from chat
		join member on(chatwriter = mno)
		where to_number(to_char(chattime, 'YYYYMMDDHH24MISSFF2')) <![CDATA[
<
]]> #{chatTime} and chatread='N'
		order by chatno
	</select>
	
	<update id="confirmChat">
		UPDATE CHAT
		SET CHATREAD='Y'
		WHERE CHATREAD='N' AND CHATSEND=#{memberStatusNo} AND CHATRECV=#{no}
	</update>
	
	<select id="compareLastChatWithCurrentTime" resultType="_long">
		select Max(to_number(to_char(chattime, 'YYYYMMDDHH24MISSFF3')))
		from chat
	</select>
</mapper>